apply plugin: 'java'
apply plugin: 'antlr'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'distribution'

group = 'org.mitre.shr'
version = '0.1'
sourceCompatibility = '1.8'

mainClassName = 'org.mitre.shr.antlr.ParseTool'
run.args = ["${projectDir}/spec/"]

repositories {
    mavenCentral()
}

dependencies {
    antlr group: 'org.antlr', name: 'antlr4', version: '4.5'
    compile group: "org.antlr", name: "antlr4-runtime", version: "4.5"
    testCompile group: 'org.testng', name: 'testng', version: '6.8.8'
}

test {
    useTestNG()
}

// Add a new source set so we can generate javascript from it (note: anltrjs mirrors main antlr sourceset)
sourceSets {
    antlrJS {
        antlr {
            srcDirs = ["src/main/antlr"]
        }
    }
}

generateGrammarSource {
    outputDirectory = file("src/generated/java/org/mitre/shr/antlr")
    arguments += ["-visitor", "-long-messages", '-package', 'org.mitre.shr.antlr']
}

generateAntlrJSGrammarSource {
    outputDirectory = file(getSHRJSParsersDir())
    arguments += ["-visitor", "-long-messages", '-Dlanguage=JavaScript']
}

clean {
    delete file("src/generated")
}

sourceSets.main.java.srcDirs += file("src/generated/java")

idea {
  module {
    generatedSourceDirs += file("${projectDir}/src/generated/java")
  }
}

def String getSHRJSParsersDir()
{
   if (hasProperty('shr.js.parsers.dir'))
   {
      return this.properties['shr.js.parsers.dir']
   }
   return "${projectDir}/build/javascript/parsers"
}